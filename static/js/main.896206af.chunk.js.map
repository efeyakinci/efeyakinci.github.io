{"version":3,"sources":["logo.svg","components/title_screen/TitleScreen.js","components/main_screen/Project.js","components/main_screen/MediaDialog.js","components/main_screen/RoboticsDialog.js","components/main_screen/MainScreen.js","App.js","reportWebVitals.js","index.js"],"names":["TitleScreen","props","variants","visible","y","opacity","transition","duration","staggerChildren","hidden","div","style","height","width","display","flexDirection","initial","animate","flexGrow","justifyContent","alignItems","fontSize","marginBottom","border","marginTop","padding","borderRadius","color","background","whileHover","backgroundColor","scale","cursor","fontWeight","onClick","mainScreen","Project","showMedia","console","log","Grid","item","xs","sm","md","projectVariant","boxShadow","alignSelf","project","title","image","destination","contentType","embed","content","MediaDialog","open","onClose","Dialog","DialogTitle","DialogContent","src","frameborder","allow","allowfullscreen","getMediaContent","RoboticsDialog","href","projects","require","MainScreen","useState","showMediaDialog","setShowMediaDialog","showRoboticsDialog","setShowRoboticsDialog","showProjects","setShowProjects","mediaContent","setMediaContent","container","paddingLeft","map","i","App","setMainScreen","className","exit","delay","when","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.896206af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { motion } from 'framer-motion'\nimport { Icon } from '@material-ui/core'\nimport ForwardArrow from '@material-ui/icons/ArrowForwardIos';\nexport default function TitleScreen(props) {\n    const variants = {\n        visible: {\n            y: -40, opacity: 1,\n            transition: {duration: 1, staggerChildren: 1}\n        },\n        hidden: {\n            y: 0, opacity: 0\n        }\n\n    }\n\n    return (\n        <motion.div style={{height: '100vh', width: '100vw', display: 'flex', flexDirection: 'column'}}> \n            <motion.div \n            variants={variants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            style={{flexGrow: '1', width: '100%', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}\n            >\n                <motion.div variants={variants} style={{fontSize: '4vw', marginBottom: '0'}}>Welcome To Efe Akinci's Personal Website</motion.div>\n\n                <motion.div style={{display: 'flex', alignItems: 'center', border: \"2px solid #2255FF\", marginTop: '2em', padding: '0.5em 0.75em', borderRadius: '1em', color: \"#2255FF\", background: \"#FFFFFF\"}} \n                variants={variants}\n                whileHover={{color: \"#FFFFFF\", backgroundColor: \"#2255FF\", scale: 1.1, cursor: \"pointer\"}}\n                >\n                   <span style={{fontSize: '2vw', fontWeight: '600'}} onClick={props.mainScreen}> \n                        Continue\n                    </span>\n                   \n                </motion.div>\n            </motion.div>\n            <div style={{flexGrow: '1'}} />\n        </motion.div>\n    )\n}\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport { motion } from 'framer-motion'\n\nimport './project.css'\n\nexport default function Project(props) {\n    const { showMedia } = props;\n    console.log(props)\n    const generateShowMediaContent = () => {\n        if (props.project.image) {\n            return <span style={{cursor: 'pointer', color: '#2233FF'}} onClick={() => showMedia({destination: props.project.image, contentType: \"IMAGE\"})}>Click For Media Content</span>\n        } else if (props.project.embed) {\n            return <span style={{cursor: 'pointer', color: '#2233FF'}} onClick={() => showMedia({destination: props.project.embed, contentType: \"VIDEO\"})}>Click For Media Content</span>\n        } else {\n            return \"\";\n        }\n    }\n    return (\n        <Grid item xs={12} sm={6} md={4} style={{padding: '2em'}}>\n            <motion.div variants={props.projectVariant}>\n                <div style = {{width: '100%'}} style={{padding: '1em', borderRadius: '1em', boxShadow: '20px 20px 60px #d9d9d9, -20px -20px 60px #ffffff', display: 'flex', flexDirection: 'column'}}>\n                    <h2 style={{alignSelf: 'center'}}> {props.project.title} </h2>\n                    {generateShowMediaContent()}\n                    <p>{props.project.content}</p>\n                </div>\n            </motion.div>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core'\nexport default function MediaDialog(props) {\n    let { open, onClose } = props;\n    console.log(props)\n    const IMAGE = \"IMAGE\";\n    const VIDEO = \"VIDEO\"\n    const getMediaContent = () => {\n        switch (props.content.contentType) {\n            case IMAGE:\n                return <img src={\"http://efeyakinci.github.io/images/\" + props.content.destination} style={{width: '100%'}}></img>\n            case VIDEO:\n                return <iframe src={\"https://www.youtube.com/embed/\" + props.content.destination} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            default:\n                return <span>Media type error.</span>\n        }\n    }\n\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                Media\n            </DialogTitle>\n            <DialogContent>\n                {getMediaContent()}\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent } from '@material-ui/core'\nexport default function RoboticsDialog(props) {\n    let { open, onClose } = props;\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>\n                Extra Robotics Information\n            </DialogTitle>\n            <DialogContent>\n                <p>\n                    Hello!\n                    <br /><br />\n                    Sometimes (most of the time), 150 characters is not enough to describe an activity. This was certainly true for robotics. Because of this, I have added this section to my website that should make finding more information easier!\n                    <br /><br />\n                    Lists are always convinient, so here is a list of our awards and where we have competed in Team 6429.\n                    <br />\n                    <h4>Competed At</h4>\n                    <ul>\n                        <li>2018 Istanbul Off-Season — Winner and Engineering Inspiration Awards</li>\n                        <li>2019 Istanbul Regional — Engineering Inspiration and Finalist Awards</li>\n                        <li>2019 Houston World Championship</li>\n                    </ul>\n\n                    For more information about our team, <a href=\"https://frc-events.firstinspires.org/team/6429\">this address</a> provides a good overview.\n                </p>\n            </DialogContent>\n        </Dialog>\n    )\n}\n","import React, { useState } from 'react'\nimport { Grid } from '@material-ui/core'\nimport Project from './Project'\nimport MediaDialog from './MediaDialog'\nimport { motion } from 'framer-motion'\nimport RoboticsDialog from './RoboticsDialog'\nlet projects = require('./projects.json')\n\nexport default function MainScreen() {\n    const [showMediaDialog, setShowMediaDialog] = useState(false);\n    const [showRoboticsDialog, setShowRoboticsDialog] = useState(false);\n    const [showProjects, setShowProjects] = useState(\"hidden\");\n    const [mediaContent, setMediaContent] = useState({});\n\n    const projectContainerVariant = {\n        hidden: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.3,\n              },\n        },\n        visible: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.3,\n              },\n        }\n    }\n\n    const projectVariant = {\n        hidden: {\n            opacity: 0,\n            scale: 0.5\n        },\n        visible: {\n            opacity: 1,\n            scale: 1\n        }\n    }\n\n    const showMedia = (image) => {\n        setMediaContent(image);\n        setShowMediaDialog(true);\n    }\n\n    return (\n        <div style={{height: \"100vh\", width: \"100vw\"}}>\n            <Grid container style={{paddingLeft: '2em'}}>\n                <Grid item xs={12} style={{display: 'flex', flexDirection: 'column'}}>\n                    <h1>Applications On This Website</h1>\n                    <ul>\n                        <li><a href='/precalc/'>Study For The Mad Trig Minute Test For Precalculus AC</a></li>\n                        <li><a href='/files/CV.pdf'>Here Is My Resume!</a></li>\n                        <li><span style={{color: \"#2233FF\", cursor: 'pointer'}} onClick={()=>setShowRoboticsDialog(!showRoboticsDialog)}>Extra Awards / Team History For Robotics</span></li>\n                        <li><span style={{color: \"#2233FF\", cursor: 'pointer'}} onClick={()=>setShowProjects((showProjects == \"visible\") ? \"hidden\" : \"visible\")}>Check Out Some Of My Projects</span></li>\n                    </ul>\n                </Grid>\n                <Grid item xs={12}>\n                    <motion.div style={{width: '100%'}} variants={projectContainerVariant} initial={\"hidden\"} animate={showProjects}>\n                        <Grid container style={{width: '100%'}}>\n                            {projects.map(((project, i) => <Project key={i} project={project} showMedia={showMedia} projectVariant={projectVariant} />))}\n                        </Grid>\n                    </motion.div>\n                </Grid>\n            </Grid>\n            <RoboticsDialog open={showRoboticsDialog} onClose={() => setShowRoboticsDialog(false)} />\n            <MediaDialog open={showMediaDialog} onClose={() => {setShowMediaDialog(false)}} content={mediaContent} />\n        </div>\n    )\n}\n","import logo from './logo.svg';\nimport { useState } from 'react';\nimport './App.css';\nimport TitleScreen from './components/title_screen/TitleScreen';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport MainScreen from './components/main_screen/MainScreen';\n\nfunction App() {\n  const [mainScreen, setMainScreen] = useState(false)\n  return (\n    <div className=\"App\">\n      <motion.div>\n      <AnimatePresence>\n                {mainScreen ? \n                (\n                <motion.div exit={{opacity: 0}} initial={{opacity: 0}} animate={{opacity: 1}} transition={{delay: 1, when: 'beforeChildren'}} key={\"main\"}>\n                  <MainScreen />\n                </motion.div>\n                ) :\n                (\n                  <motion.div exit={{opacity: 0}} key={\"title\"}>\n                    <TitleScreen mainScreen={() => setMainScreen(true)} />\n                  </motion.div>\n                  )\n                }\n      </AnimatePresence>\n      </motion.div>\n    </div>\n\n  );\n}\n\nexport default App;\n\n/*\n        <motion.div   \n        exit={{y: -200 }}>\n          {!mainScreen && <motion.h1>ffs mate</motion.h1>}\n          {\n          //mainScreen ? <MainPoem /> : <TitleScreen />\n          }\n        </motion.div>\n        */","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}